{"version":3,"sources":["apple-touch-icon.png","index.js"],"names":["GoogleSpreadsheet","require","SelectColumnFilter","column","filterValue","setFilter","preFilteredRows","id","options","React","useMemo","Set","forEach","row","add","values","value","onChange","e","target","undefined","map","option","i","SearchColumnFilter","className","TableAndMap","useState","headerValues","rows","isFetching","data","setData","useEffect","a","doc","useApiKey","loadInfo","sheet","sheetsByIndex","getRows","console","error","rowsData","RowNumber","rowNumber","Bringer","FacebookPage","Frequency","Name","Venue","Latitude","Longitude","Weekday","Address","Indoor","columns","Header","accessor","Filter","disableFilters","hideInitially","useTable","initialState","hiddenColumns","filter","c","useFilters","getTableProps","getTableBodyProps","headerGroups","prepareRow","allColumns","getToggleHideAllColumnsProps","state","results","type","getToggleHiddenProps","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","canFilter","getRowProps","cells","cell","getCellProps","InfoWindow","props","name","style","position","bottom","left","textAlign","width","backgroundColor","boxShadow","padding","fontSize","zIndex","borderRadius","MapMarker","this","show","border","height","Component","Map","_onChildClick","key","childProps","setState","index","findIndex","original","parseInt","prevProps","_","result","bootstrapURLKeys","defaultCenter","lat","lng","defaultZoom","onChildClick","item","App","src","logo","maxHeight","onClick","document","getElementById","classList","toggle","qa","question","answer","href","rootElement","ReactDOM"],"mappings":"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","file":"static/js/main.354b3e4f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/apple-touch-icon.c9916e86.png\";","import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport './styles.css';\r\nimport { useFilters, useTable } from 'react-table'\r\nimport logo from './apple-touch-icon.png';\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\n// This is a custom filter UI for selecting\r\n// a unique option from a list\r\nfunction SelectColumnFilter({\r\n  column: { filterValue, setFilter, preFilteredRows, id },\r\n}) {\r\n  // Calculate the options for filtering\r\n  // using the preFilteredRows\r\n  const options = React.useMemo(() => {\r\n    const options = new Set()\r\n    preFilteredRows.forEach(row => {\r\n      options.add(row.values[id])\r\n    })\r\n    return [...options.values()]\r\n  }, [id, preFilteredRows])\r\n\r\n  // Render a multi-select box\r\n  return (\r\n    <select\r\n      value={filterValue}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined)\r\n      }}\r\n    >\r\n      <option value=\"\">All</option>\r\n      {options.map((option, i) => (\r\n        <option key={i} value={option}>\r\n          {option}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  )\r\n}\r\n\r\nfunction SearchColumnFilter({\r\n  column: { filterValue, setFilter },\r\n}) {\r\n  return (\r\n    <input className=\"input is-small\" value={filterValue || ''} onChange={(e) => setFilter(e.target.value)} />\r\n  )\r\n}\r\n\r\nfunction TableAndMap() {\r\n  const [data, setData] = useState({ headerValues: null, rows: [], isFetching: false });\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      try {\r\n        setData({ ...data, isFetching: true });\r\n\r\n        const doc = new GoogleSpreadsheet('1uwHo4bGisUiQgwAnkFbVUZG2fabZD-uwaNx4JHlWnSs');\r\n        doc.useApiKey(\"AIzaSyDWzk5MJLYVpzppXB9xxJWjVJnoe97erbc\");\r\n        await doc.loadInfo();\r\n\r\n        const sheet = doc.sheetsByIndex[0]\r\n        const rows = await sheet.getRows()\r\n\r\n        setData({ headerValues: sheet.headerValues, rows: rows, isFetching: false });\r\n      } catch (e) {\r\n        console.error(e);\r\n        setData({ ...data, isFetching: false });\r\n      }\r\n    }());\r\n  }, []);\r\n\r\n  const rowsData = React.useMemo(\r\n    () => {\r\n      if (!data.isFetching && data.headerValues != null) {\r\n        return data.rows.map((row) => {\r\n          return {\r\n            RowNumber: row.rowNumber,\r\n            Bringer: row.Bringer,\r\n            FacebookPage: row.FacebookPage,\r\n            Frequency: row.Frequency,\r\n            Name: row.Name,\r\n            Venue: row.Venue,\r\n            Latitude: row.Latitude,\r\n            Longitude: row.Longitude,\r\n            Weekday: row[\"Weekday / Month\"],\r\n            Address: row.Address,\r\n            Indoor: row[\"Indoor / Outdoor\"],\r\n          }\r\n        })\r\n      }\r\n\r\n      return []\r\n    },\r\n    [data]\r\n  )\r\n\r\n  const columns = React.useMemo(\r\n    () => {\r\n      if (!data.isFetching && data.headerValues != null) {\r\n        return [\r\n          {\r\n            Header: 'Name',\r\n            accessor: 'Name',\r\n            Filter: SearchColumnFilter,\r\n          },\r\n          {\r\n            Header: 'Bringer',\r\n            accessor: 'Bringer',\r\n            Filter: SelectColumnFilter,\r\n          },\r\n          {\r\n            Header: 'Weekday',\r\n            accessor: 'Weekday',\r\n            Filter: SearchColumnFilter,\r\n          },\r\n          {\r\n            Header: 'Venue',\r\n            accessor: 'Venue',\r\n            Filter: SearchColumnFilter,\r\n          },\r\n          {\r\n            Header: 'Address',\r\n            accessor: 'Address',\r\n            disableFilters: true,\r\n            hideInitially: true,\r\n          },\r\n          {\r\n            Header: 'Facebook Page',\r\n            accessor: 'FacebookPage',\r\n            disableFilters: true,\r\n          },\r\n          {\r\n            Header: 'Frequency',\r\n            accessor: 'Frequency',\r\n            Filter: SearchColumnFilter,\r\n          },\r\n          {\r\n            Header: 'Indoor?',\r\n            accessor: 'Indoor',\r\n            hideInitially: true,\r\n            disableFilters: true,\r\n          }\r\n        ]\r\n      }\r\n      return []\r\n    },\r\n    [data]\r\n  )\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    allColumns,\r\n    getToggleHideAllColumnsProps,\r\n    state,\r\n  } = useTable({ columns, data: rowsData, initialState: { hiddenColumns: columns.filter(c => c.hideInitially).map(c => c.Header) } }, useFilters)\r\n\r\n  return (\r\n    <>\r\n      <div className=\"columns is-multiline\">\r\n        <span className=\"map column is-12-mobile is-5-desktop\">\r\n          <Map\r\n            results={rows}\r\n          />\r\n        </span>\r\n        <span className=\"table_wrapper column is-12-mobile is-7-desktop\">\r\n          <div>\r\n            {allColumns.map(column => (\r\n              <span key={column.id}>\r\n                <label>\r\n                  <input type=\"checkbox\" {...column.getToggleHiddenProps()} />{' '}\r\n                  {column.id}\r\n                </label>\r\n              </span>\r\n            ))}\r\n            <br />\r\n          </div>\r\n          <table className=\"table is-hoverable\" {...getTableProps()}>\r\n            <thead>\r\n              {headerGroups.map(headerGroup => (\r\n                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                  {headerGroup.headers.map(column => (\r\n                    <th\r\n                      {...column.getHeaderProps()}\r\n                    >\r\n                      {column.render('Header')}\r\n                      <div>{column.canFilter ? column.render(\"Filter\") : null}</div>\r\n                    </th>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n              {rows.map(row => {\r\n                prepareRow(row)\r\n                return (\r\n                  <tr {...row.getRowProps()}>\r\n                    {row.cells.map(cell => {\r\n                      return (\r\n                        <td\r\n                          {...cell.getCellProps()}\r\n                        >\r\n                          {cell.render('Cell')}\r\n                        </td>\r\n                      )\r\n                    })}\r\n                  </tr>\r\n                )\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </span>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst InfoWindow = (props) => {\r\n  const { name } = props;\r\n  const infoWindowStyle = {\r\n    position: 'relative',\r\n    bottom: 50,\r\n    left: '-45px',\r\n    textAlign: 'center',\r\n    width: 220,\r\n    backgroundColor: 'white',\r\n    boxShadow: '0 2px 7px 1px rgba(0, 0, 0, 0.3)',\r\n    padding: 10,\r\n    fontSize: 14,\r\n    zIndex: 100,\r\n    borderRadius: '25px',\r\n  };\r\n\r\n  return (\r\n    <div style={infoWindowStyle}>\r\n      <div style={{ fontSize: 16 }}>\r\n        {name}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass MapMarker extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const markerStyle = {\r\n      border: '1px solid white',\r\n      borderRadius: '50%',\r\n      height: 20,\r\n      width: 20,\r\n      zIndex: 10,\r\n    };\r\n    return (\r\n      <div className={this.props.show ? \"has-background-warning\" : \"has-background-primary-dark\"} style={markerStyle}>\r\n        {this.props.show && <InfoWindow name={this.props.name} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Map extends React.Component {\r\n  // TODO: turn this into a function \r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      results: [],\r\n    }\r\n  }\r\n\r\n  _onChildClick = (key, childProps) => {\r\n    this.setState((state) => {\r\n      let index = state.results.findIndex(e => e.show);\r\n      if (index > 0 && state.results[index].original.RowNumber != parseInt(key)) {\r\n        state.results[index].show = false;\r\n      }\r\n      index = state.results.findIndex(e => e.original.RowNumber == parseInt(key));\r\n      state.results[index].show = !state.results[index].show; // eslint-disable-line no-param-reassign\r\n      return { results: state.results };\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.results != prevProps.results) {\r\n      this.setState((_, props) => {\r\n        const newState = props.results.map(result => ({ ...result, show: false }));\r\n        return { results: newState };\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      // Important! Always set the container height explicitly\r\n      <div id=\"map\">\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: 'AIzaSyB2xTrXYV7Y6bN1BVVPrt2ZUglBPTZ-2S4' }}\r\n          defaultCenter={{ lat: 51.5074, lng: -0.05 }}\r\n          defaultZoom={14}\r\n          onChildClick={this._onChildClick}\r\n        >\r\n          {this.state.results.map((item) =>\r\n            <MapMarker\r\n              key={item.original.RowNumber}\r\n              lat={item.original.Latitude}\r\n              lng={item.original.Longitude}\r\n              name={item.original.Name}\r\n              show={item.show}\r\n            />,\r\n          )}\r\n        </GoogleMapReact>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  const qna = [\r\n    {\r\n      \"question\": \"My night's details are out of date! ⌚\",\r\n      \"answer\": \"Just let us know! We'll make a asap: email@example.com\",\r\n    },\r\n    {\r\n      \"question\": \"I have feedback to share / found a bug! 🐛\",\r\n      \"answer\": \"Good hunting 😄 Send us feedback here: ...\",\r\n    }\r\n  ]\r\n  return (\r\n    <>\r\n      <nav className=\"navbar is-light has-shadow py-4 mb-2\">\r\n        <div className=\"navbar-brand\">\r\n          <a className=\"navbar-item\">\r\n            <img src={logo} style={{ maxHeight: \"60px\" }} />\r\n          </a>\r\n          <div className=\"navbar-item\">\r\n            <p className=\"title\">\r\n              🎙Search Open Mic Nights in London\r\n            </p>\r\n          </div>\r\n          <div className=\"navbar-burger\" onClick={() => document.getElementById(\"nav-links\").classList.toggle(\"is-active\")}>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"navbar-menu\" id=\"nav-links\">\r\n          <div className=\"navbar-end\">\r\n            <a className=\"navbar-item\">Facebook</a>\r\n            <a className=\"navbar-item\">Sheet</a>\r\n            <a className=\"navbar-item\">🙏 Submit feedback 🙏</a>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n      <TableAndMap />\r\n\r\n      <div className=\"section\">\r\n        <div className=\"container\">\r\n          <div className=\"columns is-vcentered\">\r\n\r\n            {qna.map((qa) => {\r\n              return <div className=\"column\" key={qa.question}>\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\">\r\n                    <div className=\"card-header-title\">\r\n                      {qa.question}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-content\">\r\n                    <div className=\"content\">\r\n                      {qa.answer}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            })}\r\n          </div>\r\n          <p className=\"has-text-centered my-2 mx-2\">\r\n            Website created with ❤ by <a href=\"https://apuchitnis.github.io/\">@apuchitnis</a>. Thanks to GC for compiling all of the data.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById('app');\r\nReactDOM.render(<App />, rootElement);"],"sourceRoot":""}