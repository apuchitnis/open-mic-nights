{"version":3,"sources":["markerclusterer.js"],"names":["MarkerClusterer","map","opt_markers","opt_options","extend","google","maps","OverlayView","map_","MARKER_CLUSTER_IMAGE_PATH_","MARKER_CLUSTER_IMAGE_EXTENSION_","markers_","clusters_","sizes","styles_","ready_","options","gridSize_","minClusterSize_","maxZoom_","imagePath_","imageExtension_","zoomOnClick_","undefined","averageCenter_","setupStyles_","setMap","prevZoom_","getZoom","that","event","addListener","zoom","minZoom","maxZoom","Math","min","mapTypes","getMapTypeId","max","resetViewport","redraw","length","Object","keys","addMarkers","obj1","obj2","object","property","prototype","apply","setReady_","i","size","push","url","height","width","markers","getMarkers","bounds","LatLngBounds","marker","getPosition","fitBounds","styles","numStyles","index","count","dv","parseInt","text","calculator","calculator_","opt_nodraw","pushMarkerTo_","isAdded","repaint","indexOf","m","splice","removed","removeMarker_","markersCopy","slice","r","ready","createClusters_","projection","getProjection","tr","LatLng","getNorthEast","lat","lng","bl","getSouthWest","trPix","fromLatLngToDivPixel","x","y","blPix","ne","fromDivPixelToLatLng","sw","contains","opt_hide","cluster","remove","oldClusters","setTimeout","p1","p2","R","dLat","PI","dLon","a","sin","cos","c","atan2","sqrt","d","distance","clusterToAddTo","pos","center","getCenter","distanceBetweenPoints_","isMarkerInClusterBounds","addMarker","Cluster","mapBounds","getBounds","getExtendedBounds","isMarkerInBounds_","addToClosestCluster_","markerClusterer","markerClusterer_","getMap","getGridSize","getMinClusterSize","isAverageCenter","center_","bounds_","clusterIcon_","ClusterIcon","getStyles","isMarkerAlreadyAdded","calculateBounds_","l","len","updateIcon","mz","getMaxZoom","hide","sums","getCalculator","setCenter","setSums","show","opt_padding","getMarkerClusterer","padding_","cluster_","div_","sums_","visible_","clusterBounds","trigger","isZoomOnClick","document","createElement","getPosFromLatLng_","style","cssText","createCss","innerHTML","panes","getPanes","overlayMouseTarget","appendChild","addDomListener","triggerClusterClick","latlng","width_","height_","top","left","zIndex","Marker","MAX_ZINDEX","display","parentNode","removeChild","text_","index_","useStyle","url_","textColor_","anchor_","textSize_","backgroundPosition_","backgroundPosition","txtColor","txtSize","join"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;;;;;AAQA;;;;;;;;;;;;;;;AAgBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAsCMA;;;AACJ,2BAAYC,GAAZ,EAAiBC,WAAjB,EAA8BC,WAA9B,EAA2C;AAAA;;AACzC,SAAKC,MAAL,CAAYJ,eAAZ,EAA6BK,MAAM,CAACC,IAAP,CAAYC,WAAzC;AACA,SAAKC,IAAL,GAAYP,GAAZ;AAEA;;;;;;;AAMA,SAAKQ,0BAAL,GAAkC,aAAlC;AAGA;;;;;;;AAMA,SAAKC,+BAAL,GAAuC,KAAvC;AACA;;;;;AAIA,SAAKC,QAAL,GAAgB,EAAhB;AAEA;;;;AAGA,SAAKC,SAAL,GAAiB,EAAjB;AAEA,SAAKC,KAAL,GAAa,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,CAAb;AAEA;;;;AAGA,SAAKC,OAAL,GAAe,EAAf;AAEA;;;;;AAIA,SAAKC,MAAL,GAAc,KAAd;AAEA,QAAIC,OAAO,GAAGb,WAAW,IAAI,EAA7B;AAEA;;;;;AAIA,SAAKc,SAAL,GAAiBD,OAAO,CAAC,UAAD,CAAP,IAAuB,EAAxC;AAEA;;;;AAGA,SAAKE,eAAL,GAAuBF,OAAO,CAAC,oBAAD,CAAP,IAAiC,CAAxD;AAGA;;;;;AAIA,SAAKG,QAAL,GAAgBH,OAAO,CAAC,SAAD,CAAP,IAAsB,IAAtC;AAEA,SAAKF,OAAL,GAAeE,OAAO,CAAC,QAAD,CAAP,IAAqB,EAApC;AAEA;;;;;AAIA,SAAKI,UAAL,GAAkBJ,OAAO,CAAC,WAAD,CAAP,IAChB,KAAKP,0BADP;AAGA;;;;;AAIA,SAAKY,eAAL,GAAuBL,OAAO,CAAC,gBAAD,CAAP,IACrB,KAAKN,+BADP;AAGA;;;;;AAIA,SAAKY,YAAL,GAAoB,IAApB;;AAEA,QAAIN,OAAO,CAAC,aAAD,CAAP,IAA0BO,SAA9B,EAAyC;AACvC,WAAKD,YAAL,GAAoBN,OAAO,CAAC,aAAD,CAA3B;AACD;AAED;;;;;;AAIA,SAAKQ,cAAL,GAAsB,KAAtB;;AAEA,QAAIR,OAAO,CAAC,eAAD,CAAP,IAA4BO,SAAhC,EAA2C;AACzC,WAAKC,cAAL,GAAsBR,OAAO,CAAC,eAAD,CAA7B;AACD;;AAED,SAAKS,YAAL;AAEA,SAAKC,MAAL,CAAYzB,GAAZ;AAEA;;;;;AAIA,SAAK0B,SAAL,GAAiB,KAAKnB,IAAL,CAAUoB,OAAV,EAAjB,CA5GyC,CA8GzC;;AACA,QAAIC,IAAI,GAAG,IAAX;AACAxB,IAAAA,MAAM,CAACC,IAAP,CAAYwB,KAAZ,CAAkBC,WAAlB,CAA8B,KAAKvB,IAAnC,EAAyC,cAAzC,EAAyD,YAAY;AACnE;AACA,UAAIwB,IAAI,GAAGH,IAAI,CAACrB,IAAL,CAAUoB,OAAV,EAAX;AACA,UAAIK,OAAO,GAAGJ,IAAI,CAACrB,IAAL,CAAUyB,OAAV,IAAqB,CAAnC;AACA,UAAIC,OAAO,GAAGC,IAAI,CAACC,GAAL,CAASP,IAAI,CAACrB,IAAL,CAAU0B,OAAV,IAAqB,GAA9B,EACZL,IAAI,CAACrB,IAAL,CAAU6B,QAAV,CAAmBR,IAAI,CAACrB,IAAL,CAAU8B,YAAV,EAAnB,EAA6CJ,OADjC,CAAd;AAEAF,MAAAA,IAAI,GAAGG,IAAI,CAACC,GAAL,CAASD,IAAI,CAACI,GAAL,CAASP,IAAT,EAAeC,OAAf,CAAT,EAAkCC,OAAlC,CAAP;;AAEA,UAAIL,IAAI,CAACF,SAAL,IAAkBK,IAAtB,EAA4B;AAC1BH,QAAAA,IAAI,CAACF,SAAL,GAAiBK,IAAjB;AACAH,QAAAA,IAAI,CAACW,aAAL;AACD;AACF,KAZD;AAcAnC,IAAAA,MAAM,CAACC,IAAP,CAAYwB,KAAZ,CAAkBC,WAAlB,CAA8B,KAAKvB,IAAnC,EAAyC,MAAzC,EAAiD,YAAY;AAC3DqB,MAAAA,IAAI,CAACY,MAAL;AACD,KAFD,EA9HyC,CAkIzC;;AACA,QAAIvC,WAAW,KAAKA,WAAW,CAACwC,MAAZ,IAAsBC,MAAM,CAACC,IAAP,CAAY1C,WAAZ,EAAyBwC,MAApD,CAAf,EAA4E;AAC1E,WAAKG,UAAL,CAAgB3C,WAAhB,EAA6B,KAA7B;AACD;AACF;AAID;;;;;;;;;;;;2BAQO4C,MAAMC,MAAM;AACjB,aAAQ,UAAUC,MAAV,EAAkB;AACxB,aAAK,IAAIC,QAAT,IAAqBD,MAAM,CAACE,SAA5B,EAAuC;AACrC,eAAKA,SAAL,CAAeD,QAAf,IAA2BD,MAAM,CAACE,SAAP,CAAiBD,QAAjB,CAA3B;AACD;;AACD,eAAO,IAAP;AACD,OALM,CAKJE,KALI,CAKEL,IALF,EAKQ,CAACC,IAAD,CALR,CAAP;AAMD;AAID;;;;;;;4BAIQ;AACN,WAAKK,SAAL,CAAe,IAAf;AACD;;;;AAED;;;;2BAIO,CAAG;;;;AAEV;;;;;mCAKe;AACb,UAAI,KAAKtC,OAAL,CAAa4B,MAAjB,EAAyB;AACvB;AACD;;AAED,WAAK,IAAIW,CAAC,GAAG,CAAR,EAAWC,IAAhB,EAAsBA,IAAI,GAAG,KAAKzC,KAAL,CAAWwC,CAAX,CAA7B,EAA4CA,CAAC,EAA7C,EAAiD;AAC/C,aAAKvC,OAAL,CAAayC,IAAb,CAAkB;AAChBC,UAAAA,GAAG,EAAE,KAAKpC,UAAL,IAAmBiC,CAAC,GAAG,CAAvB,IAA4B,GAA5B,GAAkC,KAAKhC,eAD5B;AAEhBoC,UAAAA,MAAM,EAAEH,IAFQ;AAGhBI,UAAAA,KAAK,EAAEJ;AAHS,SAAlB;AAKD;AACF;AAED;;;;;;sCAGkB;AAChB,UAAIK,OAAO,GAAG,KAAKC,UAAL,EAAd;AACA,UAAIC,MAAM,GAAG,IAAIxD,MAAM,CAACC,IAAP,CAAYwD,YAAhB,EAAb;;AACA,WAAK,IAAIT,CAAC,GAAG,CAAR,EAAWU,MAAhB,EAAwBA,MAAM,GAAGJ,OAAO,CAACN,CAAD,CAAxC,EAA6CA,CAAC,EAA9C,EAAkD;AAChDQ,QAAAA,MAAM,CAACzD,MAAP,CAAc2D,MAAM,CAACC,WAAP,EAAd;AACD;;AAED,WAAKxD,IAAL,CAAUyD,SAAV,CAAoBJ,MAApB;AACD;AAGD;;;;;;;;8BAKUK,QAAQ;AAChB,WAAKpD,OAAL,GAAeoD,MAAf;AACD;AAGD;;;;;;;;gCAKY;AACV,aAAO,KAAKpD,OAAZ;AACD;AAGD;;;;;;;;oCAKgB;AACd,aAAO,KAAKQ,YAAZ;AACD;AAED;;;;;;;;sCAKkB;AAChB,aAAO,KAAKE,cAAZ;AACD;AAGD;;;;;;;;iCAKa;AACX,aAAO,KAAKb,QAAZ;AACD;AAGD;;;;;;;;sCAKkB;AAChB,aAAO,KAAKA,QAAL,CAAc+B,MAArB;AACD;AAGD;;;;;;;;+BAKWR,SAAS;AAClB,WAAKf,QAAL,GAAgBe,OAAhB;AACD;AAGD;;;;;;;;iCAKa;AACX,aAAO,KAAKf,QAAZ;AACD;AAGD;;;;;;;;;;;gCAQYwC,SAASQ,WAAW;AAC9B,UAAIC,KAAK,GAAG,CAAZ;AACA,UAAIC,KAAK,GAAGV,OAAO,CAACjB,MAApB;AACA,UAAI4B,EAAE,GAAGD,KAAT;;AACA,aAAOC,EAAE,KAAK,CAAd,EAAiB;AACfA,QAAAA,EAAE,GAAGC,QAAQ,CAACD,EAAE,GAAG,EAAN,EAAU,EAAV,CAAb;AACAF,QAAAA,KAAK;AACN;;AAEDA,MAAAA,KAAK,GAAGjC,IAAI,CAACC,GAAL,CAASgC,KAAT,EAAgBD,SAAhB,CAAR;AACA,aAAO;AACLK,QAAAA,IAAI,EAAEH,KADD;AAELD,QAAAA,KAAK,EAAEA;AAFF,OAAP;AAID;AAGD;;;;;;;;;;;kCAQcK,YAAY;AACxB,WAAKC,WAAL,GAAmBD,UAAnB;AACD;AAGD;;;;;;;;oCAKgB;AACd,aAAO,KAAKC,WAAZ;AACD;AAGD;;;;;;;;;+BAMWf,SAASgB,YAAY;AAC9B,UAAIhB,OAAO,CAACjB,MAAZ,EAAoB;AAClB,aAAK,IAAIW,CAAC,GAAG,CAAR,EAAWU,MAAhB,EAAwBA,MAAM,GAAGJ,OAAO,CAACN,CAAD,CAAxC,EAA6CA,CAAC,EAA9C,EAAkD;AAChD,eAAKuB,aAAL,CAAmBb,MAAnB;AACD;AACF,OAJD,MAIO,IAAIpB,MAAM,CAACC,IAAP,CAAYe,OAAZ,EAAqBjB,MAAzB,EAAiC;AACtC,aAAK,IAAIqB,MAAT,IAAmBJ,OAAnB,EAA4B;AAC1B,eAAKiB,aAAL,CAAmBjB,OAAO,CAACI,MAAD,CAA1B;AACD;AACF;;AACD,UAAI,CAACY,UAAL,EAAiB;AACf,aAAKlC,MAAL;AACD;AACF;AAGD;;;;;;;;;kCAMcsB,QAAQ;AACpBA,MAAAA,MAAM,CAACc,OAAP,GAAiB,KAAjB;;AACA,UAAId,MAAM,CAAC,WAAD,CAAV,EAAyB;AACvB;AACA;AACA,YAAIlC,IAAI,GAAG,IAAX;AACAxB,QAAAA,MAAM,CAACC,IAAP,CAAYwB,KAAZ,CAAkBC,WAAlB,CAA8BgC,MAA9B,EAAsC,SAAtC,EAAiD,YAAY;AAC3DA,UAAAA,MAAM,CAACc,OAAP,GAAiB,KAAjB;AACAhD,UAAAA,IAAI,CAACiD,OAAL;AACD,SAHD;AAID;;AACD,WAAKnE,QAAL,CAAc4C,IAAd,CAAmBQ,MAAnB;AACD;AAGD;;;;;;;;;8BAMUA,QAAQY,YAAY;AAC5B,WAAKC,aAAL,CAAmBb,MAAnB;;AACA,UAAI,CAACY,UAAL,EAAiB;AACf,aAAKlC,MAAL;AACD;AACF;AAGD;;;;;;;;;;kCAOcsB,QAAQ;AACpB,UAAIK,KAAK,GAAG,CAAC,CAAb;;AACA,UAAI,KAAKzD,QAAL,CAAcoE,OAAlB,EAA2B;AACzBX,QAAAA,KAAK,GAAG,KAAKzD,QAAL,CAAcoE,OAAd,CAAsBhB,MAAtB,CAAR;AACD,OAFD,MAEO;AACL,aAAK,IAAIV,CAAC,GAAG,CAAR,EAAW2B,CAAhB,EAAmBA,CAAC,GAAG,KAAKrE,QAAL,CAAc0C,CAAd,CAAvB,EAAyCA,CAAC,EAA1C,EAA8C;AAC5C,cAAI2B,CAAC,IAAIjB,MAAT,EAAiB;AACfK,YAAAA,KAAK,GAAGf,CAAR;AACA;AACD;AACF;AACF;;AAED,UAAIe,KAAK,IAAI,CAAC,CAAd,EAAiB;AACf;AACA,eAAO,KAAP;AACD;;AAEDL,MAAAA,MAAM,CAACrC,MAAP,CAAc,IAAd;AAEA,WAAKf,QAAL,CAAcsE,MAAd,CAAqBb,KAArB,EAA4B,CAA5B;AAEA,aAAO,IAAP;AACD;AAGD;;;;;;;;;;iCAOaL,QAAQY,YAAY;AAC/B,UAAIO,OAAO,GAAG,KAAKC,aAAL,CAAmBpB,MAAnB,CAAd;;AAEA,UAAI,CAACY,UAAD,IAAeO,OAAnB,EAA4B;AAC1B,aAAK1C,aAAL;AACA,aAAKC,MAAL;AACA,eAAO,IAAP;AACD,OAJD,MAIO;AACL,eAAO,KAAP;AACD;AACF;AAGD;;;;;;;;;kCAMckB,SAASgB,YAAY;AACjC;AACA;AACA,UAAIS,WAAW,GAAGzB,OAAO,KAAK,KAAKC,UAAL,EAAZ,GAAgCD,OAAO,CAAC0B,KAAR,EAAhC,GAAkD1B,OAApE;AACA,UAAIuB,OAAO,GAAG,KAAd;;AAEA,WAAK,IAAI7B,CAAC,GAAG,CAAR,EAAWU,MAAhB,EAAwBA,MAAM,GAAGqB,WAAW,CAAC/B,CAAD,CAA5C,EAAiDA,CAAC,EAAlD,EAAsD;AACpD,YAAIiC,CAAC,GAAG,KAAKH,aAAL,CAAmBpB,MAAnB,CAAR;AACAmB,QAAAA,OAAO,GAAGA,OAAO,IAAII,CAArB;AACD;;AAED,UAAI,CAACX,UAAD,IAAeO,OAAnB,EAA4B;AAC1B,aAAK1C,aAAL;AACA,aAAKC,MAAL;AACA,eAAO,IAAP;AACD;AACF;AAGD;;;;;;;;;8BAMU8C,OAAO;AACf,UAAI,CAAC,KAAKxE,MAAV,EAAkB;AAChB,aAAKA,MAAL,GAAcwE,KAAd;AACA,aAAKC,eAAL;AACD;AACF;AAGD;;;;;;;;uCAKmB;AACjB,aAAO,KAAK5E,SAAL,CAAe8B,MAAtB;AACD;AAGD;;;;;;;;6BAKS;AACP,aAAO,KAAKlC,IAAZ;AACD;AAGD;;;;;;;;2BAKOP,KAAK;AACV,WAAKO,IAAL,GAAYP,GAAZ;AACD;AAGD;;;;;;;;kCAKc;AACZ,aAAO,KAAKgB,SAAZ;AACD;AAGD;;;;;;;;gCAKYqC,MAAM;AAChB,WAAKrC,SAAL,GAAiBqC,IAAjB;AACD;AAGD;;;;;;;;wCAKoB;AAClB,aAAO,KAAKpC,eAAZ;AACD;AAED;;;;;;;;sCAKkBoC,MAAM;AACtB,WAAKpC,eAAL,GAAuBoC,IAAvB;AACD;AAGD;;;;;;;;;sCAMkBO,QAAQ;AACxB,UAAI4B,UAAU,GAAG,KAAKC,aAAL,EAAjB,CADwB,CAGxB;;AACA,UAAIC,EAAE,GAAG,IAAItF,MAAM,CAACC,IAAP,CAAYsF,MAAhB,CAAuB/B,MAAM,CAACgC,YAAP,GAAsBC,GAAtB,EAAvB,EACPjC,MAAM,CAACgC,YAAP,GAAsBE,GAAtB,EADO,CAAT;AAEA,UAAIC,EAAE,GAAG,IAAI3F,MAAM,CAACC,IAAP,CAAYsF,MAAhB,CAAuB/B,MAAM,CAACoC,YAAP,GAAsBH,GAAtB,EAAvB,EACPjC,MAAM,CAACoC,YAAP,GAAsBF,GAAtB,EADO,CAAT,CANwB,CASxB;;AACA,UAAIG,KAAK,GAAGT,UAAU,CAACU,oBAAX,CAAgCR,EAAhC,CAAZ;AACAO,MAAAA,KAAK,CAACE,CAAN,IAAW,KAAKnF,SAAhB;AACAiF,MAAAA,KAAK,CAACG,CAAN,IAAW,KAAKpF,SAAhB;AAEA,UAAIqF,KAAK,GAAGb,UAAU,CAACU,oBAAX,CAAgCH,EAAhC,CAAZ;AACAM,MAAAA,KAAK,CAACF,CAAN,IAAW,KAAKnF,SAAhB;AACAqF,MAAAA,KAAK,CAACD,CAAN,IAAW,KAAKpF,SAAhB,CAhBwB,CAkBxB;;AACA,UAAIsF,EAAE,GAAGd,UAAU,CAACe,oBAAX,CAAgCN,KAAhC,CAAT;AACA,UAAIO,EAAE,GAAGhB,UAAU,CAACe,oBAAX,CAAgCF,KAAhC,CAAT,CApBwB,CAsBxB;;AACAzC,MAAAA,MAAM,CAACzD,MAAP,CAAcmG,EAAd;AACA1C,MAAAA,MAAM,CAACzD,MAAP,CAAcqG,EAAd;AAEA,aAAO5C,MAAP;AACD;AAGD;;;;;;;;;;;sCAQkBE,QAAQF,QAAQ;AAChC,aAAOA,MAAM,CAAC6C,QAAP,CAAgB3C,MAAM,CAACC,WAAP,EAAhB,CAAP;AACD;AAGD;;;;;;mCAGe;AACb,WAAKxB,aAAL,CAAmB,IAAnB,EADa,CAGb;;AACA,WAAK7B,QAAL,GAAgB,EAAhB;AACD;AAGD;;;;;;;kCAIcgG,UAAU;AACtB;AACA,WAAK,IAAItD,CAAC,GAAG,CAAR,EAAWuD,OAAhB,EAAyBA,OAAO,GAAG,KAAKhG,SAAL,CAAeyC,CAAf,CAAnC,EAAsDA,CAAC,EAAvD,EAA2D;AACzDuD,QAAAA,OAAO,CAACC,MAAR;AACD,OAJqB,CAMtB;;;AACA,WAAK,IAAIxD,CAAC,GAAG,CAAR,EAAWU,MAAhB,EAAwBA,MAAM,GAAG,KAAKpD,QAAL,CAAc0C,CAAd,CAAjC,EAAmDA,CAAC,EAApD,EAAwD;AACtDU,QAAAA,MAAM,CAACc,OAAP,GAAiB,KAAjB;;AACA,YAAI8B,QAAJ,EAAc;AACZ5C,UAAAA,MAAM,CAACrC,MAAP,CAAc,IAAd;AACD;AACF;;AAED,WAAKd,SAAL,GAAiB,EAAjB;AACD;AAED;;;;;;8BAGU;AACR,UAAIkG,WAAW,GAAG,KAAKlG,SAAL,CAAeyE,KAAf,EAAlB;AACA,WAAKzE,SAAL,CAAe8B,MAAf,GAAwB,CAAxB;AACA,WAAKF,aAAL;AACA,WAAKC,MAAL,GAJQ,CAMR;AACA;;AACAsE,MAAAA,UAAU,CAAC,YAAY;AACrB,aAAK,IAAI1D,CAAC,GAAG,CAAR,EAAWuD,OAAhB,EAAyBA,OAAO,GAAGE,WAAW,CAACzD,CAAD,CAA9C,EAAmDA,CAAC,EAApD,EAAwD;AACtDuD,UAAAA,OAAO,CAACC,MAAR;AACD;AACF,OAJS,EAIP,CAJO,CAAV;AAKD;AAGD;;;;;;6BAGS;AACP,WAAKrB,eAAL;AACD;AAGD;;;;;;;;;;;;2CASuBwB,IAAIC,IAAI;AAC7B,UAAI,CAACD,EAAD,IAAO,CAACC,EAAZ,EAAgB;AACd,eAAO,CAAP;AACD;;AAED,UAAIC,CAAC,GAAG,IAAR,CAL6B,CAKf;;AACd,UAAIC,IAAI,GAAG,CAACF,EAAE,CAACnB,GAAH,KAAWkB,EAAE,CAAClB,GAAH,EAAZ,IAAwB3D,IAAI,CAACiF,EAA7B,GAAkC,GAA7C;AACA,UAAIC,IAAI,GAAG,CAACJ,EAAE,CAAClB,GAAH,KAAWiB,EAAE,CAACjB,GAAH,EAAZ,IAAwB5D,IAAI,CAACiF,EAA7B,GAAkC,GAA7C;AACA,UAAIE,CAAC,GAAGnF,IAAI,CAACoF,GAAL,CAASJ,IAAI,GAAG,CAAhB,IAAqBhF,IAAI,CAACoF,GAAL,CAASJ,IAAI,GAAG,CAAhB,CAArB,GACNhF,IAAI,CAACqF,GAAL,CAASR,EAAE,CAAClB,GAAH,KAAW3D,IAAI,CAACiF,EAAhB,GAAqB,GAA9B,IAAqCjF,IAAI,CAACqF,GAAL,CAASP,EAAE,CAACnB,GAAH,KAAW3D,IAAI,CAACiF,EAAhB,GAAqB,GAA9B,CAArC,GACAjF,IAAI,CAACoF,GAAL,CAASF,IAAI,GAAG,CAAhB,CADA,GACqBlF,IAAI,CAACoF,GAAL,CAASF,IAAI,GAAG,CAAhB,CAFvB;AAGA,UAAII,CAAC,GAAG,IAAItF,IAAI,CAACuF,KAAL,CAAWvF,IAAI,CAACwF,IAAL,CAAUL,CAAV,CAAX,EAAyBnF,IAAI,CAACwF,IAAL,CAAU,IAAIL,CAAd,CAAzB,CAAZ;AACA,UAAIM,CAAC,GAAGV,CAAC,GAAGO,CAAZ;AACA,aAAOG,CAAP;AACD;AAGD;;;;;;;;;yCAMqB7D,QAAQ;AAC3B,UAAI8D,QAAQ,GAAG,KAAf,CAD2B,CACL;;AACtB,UAAIC,cAAc,GAAG,IAArB;AACA,UAAIC,GAAG,GAAGhE,MAAM,CAACC,WAAP,EAAV;;AACA,WAAK,IAAIX,CAAC,GAAG,CAAR,EAAWuD,OAAhB,EAAyBA,OAAO,GAAG,KAAKhG,SAAL,CAAeyC,CAAf,CAAnC,EAAsDA,CAAC,EAAvD,EAA2D;AACzD,YAAI2E,MAAM,GAAGpB,OAAO,CAACqB,SAAR,EAAb;;AACA,YAAID,MAAJ,EAAY;AACV,cAAIJ,CAAC,GAAG,KAAKM,sBAAL,CAA4BF,MAA5B,EAAoCjE,MAAM,CAACC,WAAP,EAApC,CAAR;;AACA,cAAI4D,CAAC,GAAGC,QAAR,EAAkB;AAChBA,YAAAA,QAAQ,GAAGD,CAAX;AACAE,YAAAA,cAAc,GAAGlB,OAAjB;AACD;AACF;AACF;;AAED,UAAIkB,cAAc,IAAIA,cAAc,CAACK,uBAAf,CAAuCpE,MAAvC,CAAtB,EAAsE;AACpE+D,QAAAA,cAAc,CAACM,SAAf,CAAyBrE,MAAzB;AACD,OAFD,MAEO;AACL,YAAI6C,OAAO,GAAG,IAAIyB,OAAJ,CAAY,IAAZ,CAAd;AACAzB,QAAAA,OAAO,CAACwB,SAAR,CAAkBrE,MAAlB;AACA,aAAKnD,SAAL,CAAe2C,IAAf,CAAoBqD,OAApB;AACD;AACF;AAGD;;;;;;;;sCAKkB;AAChB,UAAI,CAAC,KAAK7F,MAAV,EAAkB;AAChB;AACD,OAHe,CAKhB;AACA;;;AACA,UAAIuH,SAAS,GAAG,IAAIjI,MAAM,CAACC,IAAP,CAAYwD,YAAhB,CAA6B,KAAKtD,IAAL,CAAU+H,SAAV,GAAsBtC,YAAtB,EAA7B,EACd,KAAKzF,IAAL,CAAU+H,SAAV,GAAsB1C,YAAtB,EADc,CAAhB;AAEA,UAAIhC,MAAM,GAAG,KAAK2E,iBAAL,CAAuBF,SAAvB,CAAb;;AAEA,WAAK,IAAIjF,CAAC,GAAG,CAAR,EAAWU,MAAhB,EAAwBA,MAAM,GAAG,KAAKpD,QAAL,CAAc0C,CAAd,CAAjC,EAAmDA,CAAC,EAApD,EAAwD;AACtD,YAAI,CAACU,MAAM,CAACc,OAAR,IAAmB,KAAK4D,iBAAL,CAAuB1E,MAAvB,EAA+BF,MAA/B,CAAvB,EAA+D;AAC7D,eAAK6E,oBAAL,CAA0B3E,MAA1B;AACD;AACF;AACF;;;;;AAGH;;;;;;;;;;IAQMsE;;;AACJ,mBAAYM,eAAZ,EAA6B;AAAA;;AAC3B,SAAKC,gBAAL,GAAwBD,eAAxB;AACA,SAAKnI,IAAL,GAAYmI,eAAe,CAACE,MAAhB,EAAZ;AACA,SAAK5H,SAAL,GAAiB0H,eAAe,CAACG,WAAhB,EAAjB;AACA,SAAK5H,eAAL,GAAuByH,eAAe,CAACI,iBAAhB,EAAvB;AACA,SAAKvH,cAAL,GAAsBmH,eAAe,CAACK,eAAhB,EAAtB;AACA,SAAKC,OAAL,GAAe,IAAf;AACA,SAAKtI,QAAL,GAAgB,EAAhB;AACA,SAAKuI,OAAL,GAAe,IAAf;AACA,SAAKC,YAAL,GAAoB,IAAIC,WAAJ,CAAgB,IAAhB,EAAsBT,eAAe,CAACU,SAAhB,EAAtB,EAClBV,eAAe,CAACG,WAAhB,EADkB,CAApB;AAED;AAED;;;;;;;;;;yCAMqB/E,QAAQ;AAC3B,UAAI,KAAKpD,QAAL,CAAcoE,OAAlB,EAA2B;AACzB,eAAO,KAAKpE,QAAL,CAAcoE,OAAd,CAAsBhB,MAAtB,KAAiC,CAAC,CAAzC;AACD,OAFD,MAEO;AACL,aAAK,IAAIV,CAAC,GAAG,CAAR,EAAW2B,CAAhB,EAAmBA,CAAC,GAAG,KAAKrE,QAAL,CAAc0C,CAAd,CAAvB,EAAyCA,CAAC,EAA1C,EAA8C;AAC5C,cAAI2B,CAAC,IAAIjB,MAAT,EAAiB;AACf,mBAAO,IAAP;AACD;AACF;AACF;;AACD,aAAO,KAAP;AACD;AAGD;;;;;;;;;8BAMUA,QAAQ;AAChB,UAAI,KAAKuF,oBAAL,CAA0BvF,MAA1B,CAAJ,EAAuC;AACrC,eAAO,KAAP;AACD;;AAED,UAAI,CAAC,KAAKkF,OAAV,EAAmB;AACjB,aAAKA,OAAL,GAAelF,MAAM,CAACC,WAAP,EAAf;AACA,aAAKuF,gBAAL;AACD,OAHD,MAGO;AACL,YAAI,KAAK/H,cAAT,EAAyB;AACvB,cAAIgI,CAAC,GAAG,KAAK7I,QAAL,CAAc+B,MAAd,GAAuB,CAA/B;AACA,cAAIoD,GAAG,GAAG,CAAC,KAAKmD,OAAL,CAAanD,GAAb,MAAsB0D,CAAC,GAAG,CAA1B,IAA+BzF,MAAM,CAACC,WAAP,GAAqB8B,GAArB,EAAhC,IAA8D0D,CAAxE;AACA,cAAIzD,GAAG,GAAG,CAAC,KAAKkD,OAAL,CAAalD,GAAb,MAAsByD,CAAC,GAAG,CAA1B,IAA+BzF,MAAM,CAACC,WAAP,GAAqB+B,GAArB,EAAhC,IAA8DyD,CAAxE;AACA,eAAKP,OAAL,GAAe,IAAI5I,MAAM,CAACC,IAAP,CAAYsF,MAAhB,CAAuBE,GAAvB,EAA4BC,GAA5B,CAAf;AACA,eAAKwD,gBAAL;AACD;AACF;;AAEDxF,MAAAA,MAAM,CAACc,OAAP,GAAiB,IAAjB;AACA,WAAKlE,QAAL,CAAc4C,IAAd,CAAmBQ,MAAnB;AAEA,UAAI0F,GAAG,GAAG,KAAK9I,QAAL,CAAc+B,MAAxB;;AACA,UAAI+G,GAAG,GAAG,KAAKvI,eAAX,IAA8B6C,MAAM,CAAC8E,MAAP,MAAmB,KAAKrI,IAA1D,EAAgE;AAC9D;AACAuD,QAAAA,MAAM,CAACrC,MAAP,CAAc,KAAKlB,IAAnB;AACD;;AAED,UAAIiJ,GAAG,IAAI,KAAKvI,eAAhB,EAAiC;AAC/B;AACA,aAAK,IAAImC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoG,GAApB,EAAyBpG,CAAC,EAA1B,EAA8B;AAC5B,eAAK1C,QAAL,CAAc0C,CAAd,EAAiB3B,MAAjB,CAAwB,IAAxB;AACD;AACF;;AAED,UAAI+H,GAAG,IAAI,KAAKvI,eAAhB,EAAiC;AAC/B6C,QAAAA,MAAM,CAACrC,MAAP,CAAc,IAAd;AACD;;AAED,WAAKgI,UAAL;AACA,aAAO,IAAP;AACD;AAGD;;;;;;;;yCAKqB;AACnB,aAAO,KAAKd,gBAAZ;AACD;AAGD;;;;;;;;gCAKY;AACV,UAAI/E,MAAM,GAAG,IAAIxD,MAAM,CAACC,IAAP,CAAYwD,YAAhB,CAA6B,KAAKmF,OAAlC,EAA2C,KAAKA,OAAhD,CAAb;AACA,UAAItF,OAAO,GAAG,KAAKC,UAAL,EAAd;;AACA,WAAK,IAAIP,CAAC,GAAG,CAAR,EAAWU,MAAhB,EAAwBA,MAAM,GAAGJ,OAAO,CAACN,CAAD,CAAxC,EAA6CA,CAAC,EAA9C,EAAkD;AAChDQ,QAAAA,MAAM,CAACzD,MAAP,CAAc2D,MAAM,CAACC,WAAP,EAAd;AACD;;AACD,aAAOH,MAAP;AACD;AAGD;;;;;;6BAGS;AACP,WAAKsF,YAAL,CAAkBtC,MAAlB;AACA,WAAKlG,QAAL,CAAc+B,MAAd,GAAuB,CAAvB;AACA,aAAO,KAAK/B,QAAZ;AACD;AAGD;;;;;;;;8BAKU;AACR,aAAO,KAAKA,QAAL,CAAc+B,MAArB;AACD;AAGD;;;;;;;;iCAKa;AACX,aAAO,KAAK/B,QAAZ;AACD;AAGD;;;;;;;;gCAKY;AACV,aAAO,KAAKsI,OAAZ;AACD;AAGD;;;;;;;;uCAKmB;AACjB,UAAIpF,MAAM,GAAG,IAAIxD,MAAM,CAACC,IAAP,CAAYwD,YAAhB,CAA6B,KAAKmF,OAAlC,EAA2C,KAAKA,OAAhD,CAAb;AACA,WAAKC,OAAL,GAAe,KAAKN,gBAAL,CAAsBJ,iBAAtB,CAAwC3E,MAAxC,CAAf;AACD;AAGD;;;;;;;;;4CAMwBE,QAAQ;AAC9B,aAAO,KAAKmF,OAAL,CAAaxC,QAAb,CAAsB3C,MAAM,CAACC,WAAP,EAAtB,CAAP;AACD;AAGD;;;;;;;;6BAKS;AACP,aAAO,KAAKxD,IAAZ;AACD;AAGD;;;;;;iCAGa;AACX,UAAIwB,IAAI,GAAG,KAAKxB,IAAL,CAAUoB,OAAV,EAAX;AACA,UAAI+H,EAAE,GAAG,KAAKf,gBAAL,CAAsBgB,UAAtB,EAAT;;AAEA,UAAID,EAAE,IAAI3H,IAAI,GAAG2H,EAAjB,EAAqB;AACnB;AACA,aAAK,IAAItG,CAAC,GAAG,CAAR,EAAWU,MAAhB,EAAwBA,MAAM,GAAG,KAAKpD,QAAL,CAAc0C,CAAd,CAAjC,EAAmDA,CAAC,EAApD,EAAwD;AACtDU,UAAAA,MAAM,CAACrC,MAAP,CAAc,KAAKlB,IAAnB;AACD;;AACD;AACD;;AAED,UAAI,KAAKG,QAAL,CAAc+B,MAAd,GAAuB,KAAKxB,eAAhC,EAAiD;AAC/C;AACA,aAAKiI,YAAL,CAAkBU,IAAlB;AACA;AACD;;AAED,UAAI1F,SAAS,GAAG,KAAKyE,gBAAL,CAAsBS,SAAtB,GAAkC3G,MAAlD;AACA,UAAIoH,IAAI,GAAG,KAAKlB,gBAAL,CAAsBmB,aAAtB,GAAsC,KAAKpJ,QAA3C,EAAqDwD,SAArD,CAAX;AACA,WAAKgF,YAAL,CAAkBa,SAAlB,CAA4B,KAAKf,OAAjC;AACA,WAAKE,YAAL,CAAkBc,OAAlB,CAA0BH,IAA1B;AACA,WAAKX,YAAL,CAAkBe,IAAlB;AACD;;;;;AAGH;;;;;;;;;;;;;;;;;;;IAiBMd;;;AACJ,uBAAYxC,OAAZ,EAAqB1C,MAArB,EAA6BiG,WAA7B,EAA0C;AAAA;;AACxCvD,IAAAA,OAAO,CAACwD,kBAAR,GAA6BhK,MAA7B,CAAoCgJ,WAApC,EAAiD/I,MAAM,CAACC,IAAP,CAAYC,WAA7D;AAEA,SAAKO,OAAL,GAAeoD,MAAf;AACA,SAAKmG,QAAL,GAAgBF,WAAW,IAAI,CAA/B;AACA,SAAKG,QAAL,GAAgB1D,OAAhB;AACA,SAAKqC,OAAL,GAAe,IAAf;AACA,SAAKzI,IAAL,GAAYoG,OAAO,CAACiC,MAAR,EAAZ;AACA,SAAK0B,IAAL,GAAY,IAAZ;AACA,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,QAAL,GAAgB,KAAhB;AAEA,SAAK/I,MAAL,CAAY,KAAKlB,IAAjB;AACD;AAGD;;;;;;;0CAGsB;AACpB,UAAIkK,aAAa,GAAG,KAAKJ,QAAL,CAAc/B,SAAd,EAApB;AACA,UAAII,eAAe,GAAG,KAAK2B,QAAL,CAAcF,kBAAd,EAAtB,CAFoB,CAIpB;;AACA/J,MAAAA,MAAM,CAACC,IAAP,CAAYwB,KAAZ,CAAkB6I,OAAlB,CAA0BhC,eAAe,CAACnI,IAA1C,EAAgD,cAAhD,EAAgE,KAAK8J,QAArE;;AAEA,UAAI3B,eAAe,CAACiC,aAAhB,EAAJ,EAAqC;AACnC;AACA,aAAKpK,IAAL,CAAUyD,SAAV,CAAoByG,aAApB;AACA,aAAKlK,IAAL,CAAUwJ,SAAV,CAAoBU,aAAa,CAACzC,SAAd,EAApB;AACD;AACF;;;;AAGD;;;;4BAIQ;AACN,WAAKsC,IAAL,GAAYM,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAZ;;AACA,UAAI,KAAKL,QAAT,EAAmB;AACjB,YAAI1C,GAAG,GAAG,KAAKgD,iBAAL,CAAuB,KAAK9B,OAA5B,CAAV;AACA,aAAKsB,IAAL,CAAUS,KAAV,CAAgBC,OAAhB,GAA0B,KAAKC,SAAL,CAAenD,GAAf,CAA1B;AACA,aAAKwC,IAAL,CAAUY,SAAV,GAAsB,KAAKX,KAAL,CAAWhG,IAAjC;AACD;;AAED,UAAI4G,KAAK,GAAG,KAAKC,QAAL,EAAZ;AACAD,MAAAA,KAAK,CAACE,kBAAN,CAAyBC,WAAzB,CAAqC,KAAKhB,IAA1C;AAEA,UAAI1I,IAAI,GAAG,IAAX;AACAxB,MAAAA,MAAM,CAACC,IAAP,CAAYwB,KAAZ,CAAkB0J,cAAlB,CAAiC,KAAKjB,IAAtC,EAA4C,OAA5C,EAAqD,YAAY;AAC/D1I,QAAAA,IAAI,CAAC4J,mBAAL;AACD,OAFD;AAGD;;;;AAGD;;;;;;;sCAOkBC,QAAQ;AACxB,UAAI3D,GAAG,GAAG,KAAKrC,aAAL,GAAqBS,oBAArB,CAA0CuF,MAA1C,CAAV;AACA3D,MAAAA,GAAG,CAAC3B,CAAJ,IAAS7B,QAAQ,CAAC,KAAKoH,MAAL,GAAc,CAAf,EAAkB,EAAlB,CAAjB;AACA5D,MAAAA,GAAG,CAAC1B,CAAJ,IAAS9B,QAAQ,CAAC,KAAKqH,OAAL,GAAe,CAAhB,EAAmB,EAAnB,CAAjB;AACA,aAAO7D,GAAP;AACD;;;;AAGD;;;;2BAIO;AACL,UAAI,KAAK0C,QAAT,EAAmB;AACjB,YAAI1C,GAAG,GAAG,KAAKgD,iBAAL,CAAuB,KAAK9B,OAA5B,CAAV;AACA,aAAKsB,IAAL,CAAUS,KAAV,CAAgBa,GAAhB,GAAsB9D,GAAG,CAAC1B,CAAJ,GAAQ,IAA9B;AACA,aAAKkE,IAAL,CAAUS,KAAV,CAAgBc,IAAhB,GAAuB/D,GAAG,CAAC3B,CAAJ,GAAQ,IAA/B;AACA,aAAKmE,IAAL,CAAUS,KAAV,CAAgBe,MAAhB,GAAyB1L,MAAM,CAACC,IAAP,CAAY0L,MAAZ,CAAmBC,UAAnB,GAAgC,CAAzD;AACD;AACF;;;;AAGD;;;2BAGO;AACL,UAAI,KAAK1B,IAAT,EAAe;AACb,aAAKA,IAAL,CAAUS,KAAV,CAAgBkB,OAAhB,GAA0B,MAA1B;AACD;;AACD,WAAKzB,QAAL,GAAgB,KAAhB;AACD;;;;AAGD;;;2BAGO;AACL,UAAI,KAAKF,IAAT,EAAe;AACb,YAAIxC,GAAG,GAAG,KAAKgD,iBAAL,CAAuB,KAAK9B,OAA5B,CAAV;AACA,aAAKsB,IAAL,CAAUS,KAAV,CAAgBC,OAAhB,GAA0B,KAAKC,SAAL,CAAenD,GAAf,CAA1B;AACA,aAAKwC,IAAL,CAAUS,KAAV,CAAgBkB,OAAhB,GAA0B,EAA1B;AACD;;AACD,WAAKzB,QAAL,GAAgB,IAAhB;AACD;;;;AAGD;;;6BAGS;AACP,WAAK/I,MAAL,CAAY,IAAZ;AACD;;;;AAGD;;;;+BAIW;AACT,UAAI,KAAK6I,IAAL,IAAa,KAAKA,IAAL,CAAU4B,UAA3B,EAAuC;AACrC,aAAKtC,IAAL;AACA,aAAKU,IAAL,CAAU4B,UAAV,CAAqBC,WAArB,CAAiC,KAAK7B,IAAtC;AACA,aAAKA,IAAL,GAAY,IAAZ;AACD;AACF;;;;AAGD;;;;;;;4BAOQT,MAAM;AACZ,WAAKU,KAAL,GAAaV,IAAb;AACA,WAAKuC,KAAL,GAAavC,IAAI,CAACtF,IAAlB;AACA,WAAK8H,MAAL,GAAcxC,IAAI,CAAC1F,KAAnB;;AACA,UAAI,KAAKmG,IAAT,EAAe;AACb,aAAKA,IAAL,CAAUY,SAAV,GAAsBrB,IAAI,CAACtF,IAA3B;AACD;;AAED,WAAK+H,QAAL;AACD;;;;AAGD;;;+BAGW;AACT,UAAInI,KAAK,GAAGjC,IAAI,CAACI,GAAL,CAAS,CAAT,EAAY,KAAKiI,KAAL,CAAWpG,KAAX,GAAmB,CAA/B,CAAZ;AACAA,MAAAA,KAAK,GAAGjC,IAAI,CAACC,GAAL,CAAS,KAAKtB,OAAL,CAAa4B,MAAb,GAAsB,CAA/B,EAAkC0B,KAAlC,CAAR;AACA,UAAI4G,KAAK,GAAG,KAAKlK,OAAL,CAAasD,KAAb,CAAZ;AACA,WAAKoI,IAAL,GAAYxB,KAAK,CAAC,KAAD,CAAjB;AACA,WAAKY,OAAL,GAAeZ,KAAK,CAAC,QAAD,CAApB;AACA,WAAKW,MAAL,GAAcX,KAAK,CAAC,OAAD,CAAnB;AACA,WAAKyB,UAAL,GAAkBzB,KAAK,CAAC,WAAD,CAAvB;AACA,WAAK0B,OAAL,GAAe1B,KAAK,CAAC,QAAD,CAApB;AACA,WAAK2B,SAAL,GAAiB3B,KAAK,CAAC,UAAD,CAAtB;AACA,WAAK4B,mBAAL,GAA2B5B,KAAK,CAAC,oBAAD,CAAhC;AACD;;;;AAGD;;;;;8BAKUhD,QAAQ;AAChB,WAAKiB,OAAL,GAAejB,MAAf;AACD;;;;AAGD;;;;;;8BAMUD,KAAK;AACb,UAAIiD,KAAK,GAAG,EAAZ;AACAA,MAAAA,KAAK,CAACzH,IAAN,CAAW,0BAA0B,KAAKiJ,IAA/B,GAAsC,IAAjD;AACA,UAAIK,kBAAkB,GAAG,KAAKD,mBAAL,GAA2B,KAAKA,mBAAhC,GAAsD,KAA/E;AACA5B,MAAAA,KAAK,CAACzH,IAAN,CAAW,yBAAyBsJ,kBAAzB,GAA8C,GAAzD;;AAEA,UAAI,QAAO,KAAKH,OAAZ,MAAwB,QAA5B,EAAsC;AACpC,YAAI,OAAO,KAAKA,OAAL,CAAa,CAAb,CAAP,KAA2B,QAA3B,IAAuC,KAAKA,OAAL,CAAa,CAAb,IAAkB,CAAzD,IACF,KAAKA,OAAL,CAAa,CAAb,IAAkB,KAAKd,OADzB,EACkC;AAChCZ,UAAAA,KAAK,CAACzH,IAAN,CAAW,aAAa,KAAKqI,OAAL,GAAe,KAAKc,OAAL,CAAa,CAAb,CAA5B,IACT,kBADS,GACY,KAAKA,OAAL,CAAa,CAAb,CADZ,GAC8B,KADzC;AAED,SAJD,MAIO;AACL1B,UAAAA,KAAK,CAACzH,IAAN,CAAW,YAAY,KAAKqI,OAAjB,GAA2B,kBAA3B,GAAgD,KAAKA,OAArD,GACT,KADF;AAED;;AACD,YAAI,OAAO,KAAKc,OAAL,CAAa,CAAb,CAAP,KAA2B,QAA3B,IAAuC,KAAKA,OAAL,CAAa,CAAb,IAAkB,CAAzD,IACF,KAAKA,OAAL,CAAa,CAAb,IAAkB,KAAKf,MADzB,EACiC;AAC/BX,UAAAA,KAAK,CAACzH,IAAN,CAAW,YAAY,KAAKoI,MAAL,GAAc,KAAKe,OAAL,CAAa,CAAb,CAA1B,IACT,mBADS,GACa,KAAKA,OAAL,CAAa,CAAb,CADb,GAC+B,KAD1C;AAED,SAJD,MAIO;AACL1B,UAAAA,KAAK,CAACzH,IAAN,CAAW,WAAW,KAAKoI,MAAhB,GAAyB,wBAApC;AACD;AACF,OAhBD,MAgBO;AACLX,QAAAA,KAAK,CAACzH,IAAN,CAAW,YAAY,KAAKqI,OAAjB,GAA2B,kBAA3B,GACT,KAAKA,OADI,GACM,YADN,GACqB,KAAKD,MAD1B,GACmC,wBAD9C;AAED;;AAED,UAAImB,QAAQ,GAAG,KAAKL,UAAL,GAAkB,KAAKA,UAAvB,GAAoC,OAAnD;AACA,UAAIM,OAAO,GAAG,KAAKJ,SAAL,GAAiB,KAAKA,SAAtB,GAAkC,EAAhD;AAEA3B,MAAAA,KAAK,CAACzH,IAAN,CAAW,yBAAyBwE,GAAG,CAAC1B,CAA7B,GAAiC,WAAjC,GACT0B,GAAG,CAAC3B,CADK,GACD,YADC,GACc0G,QADd,GACyB,iCADzB,GAETC,OAFS,GAEC,oDAFZ;AAGA,aAAO/B,KAAK,CAACgC,IAAN,CAAW,EAAX,CAAP;AACD;;;;;;eAGYhN","file":"markerclusterer.23c45522.js","sourceRoot":"..","sourcesContent":["/**\n * @name MarkerClusterer for Google Maps v3\n * @author Luke Mahe\n * @fileoverview\n * The library creates and manages per-zoom-level clusters for large amounts of\n * markers.\n */\n\n/**\n * @license\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * A Marker Clusterer that clusters markers.\n *\n * @param {google.maps.Map} map The Google map to attach to.\n * @param {Array.<google.maps.Marker>=} opt_markers Optional markers to add to\n *   the cluster.\n * @param {Object=} opt_options support the following options:\n *     'gridSize': (number) The grid size of a cluster in pixels.\n *     'maxZoom': (number) The maximum zoom level that a marker can be part of a\n *                cluster.\n *     'zoomOnClick': (boolean) Whether the default behaviour of clicking on a\n *                    cluster is to zoom into it.\n *     'imagePath': (string) The base URL where the images representing\n *                  clusters will be found. The full URL will be:\n *                  {imagePath}[1-5].{imageExtension}\n *                  Default: '../images/m'.\n *     'imageExtension': (string) The suffix for images URL representing\n *                       clusters will be found. See _imagePath_ for details.\n *                       Default: 'png'.\n *     'averageCenter': (boolean) Whether the center of each cluster should be\n *                      the average of all markers in the cluster.\n *     'minimumClusterSize': (number) The minimum number of markers to be in a\n *                           cluster before the markers are hidden and a count\n *                           is shown.\n *     'styles': (object) An object that has style properties:\n *       'url': (string) The image url.\n *       'height': (number) The image height.\n *       'width': (number) The image width.\n *       'anchor': (Array) The anchor position of the label text.\n *       'textColor': (string) The text color.\n *       'textSize': (number) The text size.\n *       'backgroundPosition': (string) The position of the backgound x, y.\n * @constructor\n * @extends google.maps.OverlayView\n */\n\n\n\nclass MarkerClusterer {\n  constructor(map, opt_markers, opt_options) {\n    this.extend(MarkerClusterer, google.maps.OverlayView);\n    this.map_ = map;\n    \n    /**\n     * The marker cluster image path.\n     *\n     * @type {string}\n     * @private\n     */\n    this.MARKER_CLUSTER_IMAGE_PATH_ = '../images/m';\n\n\n    /**\n     * The marker cluster image path.\n     *\n     * @type {string}\n     * @private\n     */\n    this.MARKER_CLUSTER_IMAGE_EXTENSION_ = 'png';\n    /**\n   * @type {Array.<google.maps.Marker>}\n   * @private\n   */\n    this.markers_ = [];\n\n    /**\n     *  @type {Array.<Cluster>}\n     */\n    this.clusters_ = [];\n\n    this.sizes = [53, 56, 66, 78, 90];\n\n    /**\n     * @private\n     */\n    this.styles_ = [];\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.ready_ = false;\n\n    var options = opt_options || {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.gridSize_ = options['gridSize'] || 60;\n\n    /**\n     * @private\n     */\n    this.minClusterSize_ = options['minimumClusterSize'] || 2;\n\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.maxZoom_ = options['maxZoom'] || null;\n\n    this.styles_ = options['styles'] || [];\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.imagePath_ = options['imagePath'] ||\n      this.MARKER_CLUSTER_IMAGE_PATH_;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.imageExtension_ = options['imageExtension'] ||\n      this.MARKER_CLUSTER_IMAGE_EXTENSION_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.zoomOnClick_ = true;\n\n    if (options['zoomOnClick'] != undefined) {\n      this.zoomOnClick_ = options['zoomOnClick'];\n    }\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.averageCenter_ = false;\n\n    if (options['averageCenter'] != undefined) {\n      this.averageCenter_ = options['averageCenter'];\n    }\n\n    this.setupStyles_();\n\n    this.setMap(map);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.prevZoom_ = this.map_.getZoom();\n\n    // Add the map event listeners\n    var that = this;\n    google.maps.event.addListener(this.map_, 'zoom_changed', function () {\n      // Determines map type and prevent illegal zoom levels\n      var zoom = that.map_.getZoom();\n      var minZoom = that.map_.minZoom || 0;\n      var maxZoom = Math.min(that.map_.maxZoom || 100,\n        that.map_.mapTypes[that.map_.getMapTypeId()].maxZoom);\n      zoom = Math.min(Math.max(zoom, minZoom), maxZoom);\n\n      if (that.prevZoom_ != zoom) {\n        that.prevZoom_ = zoom;\n        that.resetViewport();\n      }\n    });\n\n    google.maps.event.addListener(this.map_, 'idle', function () {\n      that.redraw();\n    });\n\n    // Finally, add the markers\n    if (opt_markers && (opt_markers.length || Object.keys(opt_markers).length)) {\n      this.addMarkers(opt_markers, false);\n    }\n  }\n\n\n\n  /**\n   * Extends a objects prototype by anothers.\n   *\n   * @param {Object} obj1 The object to be extended.\n   * @param {Object} obj2 The object to extend with.\n   * @return {Object} The new extended object.\n   * @ignore\n   */\n  extend(obj1, obj2) {\n    return (function (object) {\n      for (var property in object.prototype) {\n        this.prototype[property] = object.prototype[property];\n      }\n      return this;\n    }).apply(obj1, [obj2]);\n  }\n\n\n\n  /**\n   * Implementaion of the interface method.\n   * @ignore\n   */\n  onAdd() {\n    this.setReady_(true);\n  };\n\n  /**\n   * Implementaion of the interface method.\n   * @ignore\n   */\n  draw() { };\n\n  /**\n   * Sets up the styles object.\n   *\n   * @private\n   */\n  setupStyles_() {\n    if (this.styles_.length) {\n      return;\n    }\n\n    for (var i = 0, size; size = this.sizes[i]; i++) {\n      this.styles_.push({\n        url: this.imagePath_ + (i + 1) + '.' + this.imageExtension_,\n        height: size,\n        width: size\n      });\n    }\n  }\n\n  /**\n   *  Fit the map to the bounds of the markers in the clusterer.\n   */\n  fitMapToMarkers() {\n    var markers = this.getMarkers();\n    var bounds = new google.maps.LatLngBounds();\n    for (var i = 0, marker; marker = markers[i]; i++) {\n      bounds.extend(marker.getPosition());\n    }\n\n    this.map_.fitBounds(bounds);\n  }\n\n\n  /**\n   *  Sets the styles.\n   *\n   *  @param {Object} styles The style to set.\n   */\n  setStyles(styles) {\n    this.styles_ = styles;\n  }\n\n\n  /**\n   *  Gets the styles.\n   *\n   *  @return {Object} The styles object.\n   */\n  getStyles() {\n    return this.styles_;\n  }\n\n\n  /**\n   * Whether zoom on click is set.\n   *\n   * @return {boolean} True if zoomOnClick_ is set.\n   */\n  isZoomOnClick() {\n    return this.zoomOnClick_;\n  }\n\n  /**\n   * Whether average center is set.\n   *\n   * @return {boolean} True if averageCenter_ is set.\n   */\n  isAverageCenter() {\n    return this.averageCenter_;\n  }\n\n\n  /**\n   *  Returns the array of markers in the clusterer.\n   *\n   *  @return {Array.<google.maps.Marker>} The markers.\n   */\n  getMarkers() {\n    return this.markers_;\n  }\n\n\n  /**\n   *  Returns the number of markers in the clusterer\n   *\n   *  @return {Number} The number of markers.\n   */\n  getTotalMarkers() {\n    return this.markers_.length;\n  }\n\n\n  /**\n   *  Sets the max zoom for the clusterer.\n   *\n   *  @param {number} maxZoom The max zoom level.\n   */\n  setMaxZoom(maxZoom) {\n    this.maxZoom_ = maxZoom;\n  }\n\n\n  /**\n   *  Gets the max zoom for the clusterer.\n   *\n   *  @return {number} The max zoom level.\n   */\n  getMaxZoom() {\n    return this.maxZoom_;\n  }\n\n\n  /**\n   *  The function for calculating the cluster icon image.\n   *\n   *  @param {Array.<google.maps.Marker>} markers The markers in the clusterer.\n   *  @param {number} numStyles The number of styles available.\n   *  @return {Object} A object properties: 'text' (string) and 'index' (number).\n   *  @private\n   */\n  calculator_(markers, numStyles) {\n    var index = 0;\n    var count = markers.length;\n    var dv = count;\n    while (dv !== 0) {\n      dv = parseInt(dv / 10, 10);\n      index++;\n    }\n\n    index = Math.min(index, numStyles);\n    return {\n      text: count,\n      index: index\n    };\n  }\n\n\n  /**\n   * Set the calculator function.\n   *\n   * @param {function(Array, number)} calculator The function to set as the\n   *     calculator. The function should return a object properties:\n   *     'text' (string) and 'index' (number).\n   *\n   */\n  setCalculator(calculator) {\n    this.calculator_ = calculator;\n  }\n\n\n  /**\n   * Get the calculator function.\n   *\n   * @return {function(Array, number)} the calculator function.\n   */\n  getCalculator() {\n    return this.calculator_;\n  }\n\n\n  /**\n   * Add an array of markers to the clusterer.\n   *\n   * @param {Array.<google.maps.Marker>} markers The markers to add.\n   * @param {boolean=} opt_nodraw Whether to redraw the clusters.\n   */\n  addMarkers(markers, opt_nodraw) {\n    if (markers.length) {\n      for (var i = 0, marker; marker = markers[i]; i++) {\n        this.pushMarkerTo_(marker);\n      }\n    } else if (Object.keys(markers).length) {\n      for (var marker in markers) {\n        this.pushMarkerTo_(markers[marker]);\n      }\n    }\n    if (!opt_nodraw) {\n      this.redraw();\n    }\n  }\n\n\n  /**\n   * Pushes a marker to the clusterer.\n   *\n   * @param {google.maps.Marker} marker The marker to add.\n   * @private\n   */\n  pushMarkerTo_(marker) {\n    marker.isAdded = false;\n    if (marker['draggable']) {\n      // If the marker is draggable add a listener so we update the clusters on\n      // the drag end.\n      var that = this;\n      google.maps.event.addListener(marker, 'dragend', function () {\n        marker.isAdded = false;\n        that.repaint();\n      });\n    }\n    this.markers_.push(marker);\n  }\n\n\n  /**\n   * Adds a marker to the clusterer and redraws if needed.\n   *\n   * @param {google.maps.Marker} marker The marker to add.\n   * @param {boolean=} opt_nodraw Whether to redraw the clusters.\n   */\n  addMarker(marker, opt_nodraw) {\n    this.pushMarkerTo_(marker);\n    if (!opt_nodraw) {\n      this.redraw();\n    }\n  }\n\n\n  /**\n   * Removes a marker and returns true if removed, false if not\n   *\n   * @param {google.maps.Marker} marker The marker to remove\n   * @return {boolean} Whether the marker was removed or not\n   * @private\n   */\n  removeMarker_(marker) {\n    var index = -1;\n    if (this.markers_.indexOf) {\n      index = this.markers_.indexOf(marker);\n    } else {\n      for (var i = 0, m; m = this.markers_[i]; i++) {\n        if (m == marker) {\n          index = i;\n          break;\n        }\n      }\n    }\n\n    if (index == -1) {\n      // Marker is not in our list of markers.\n      return false;\n    }\n\n    marker.setMap(null);\n\n    this.markers_.splice(index, 1);\n\n    return true;\n  }\n\n\n  /**\n   * Remove a marker from the cluster.\n   *\n   * @param {google.maps.Marker} marker The marker to remove.\n   * @param {boolean=} opt_nodraw Optional boolean to force no redraw.\n   * @return {boolean} True if the marker was removed.\n   */\n  removeMarker(marker, opt_nodraw) {\n    var removed = this.removeMarker_(marker);\n\n    if (!opt_nodraw && removed) {\n      this.resetViewport();\n      this.redraw();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n\n  /**\n   * Removes an array of markers from the cluster.\n   *\n   * @param {Array.<google.maps.Marker>} markers The markers to remove.\n   * @param {boolean=} opt_nodraw Optional boolean to force no redraw.\n   */\n  removeMarkers(markers, opt_nodraw) {\n    // create a local copy of markers if required\n    // (removeMarker_ modifies the getMarkers() array in place)\n    var markersCopy = markers === this.getMarkers() ? markers.slice() : markers;\n    var removed = false;\n\n    for (var i = 0, marker; marker = markersCopy[i]; i++) {\n      var r = this.removeMarker_(marker);\n      removed = removed || r;\n    }\n\n    if (!opt_nodraw && removed) {\n      this.resetViewport();\n      this.redraw();\n      return true;\n    }\n  }\n\n\n  /**\n   * Sets the clusterer's ready state.\n   *\n   * @param {boolean} ready The state.\n   * @private\n   */\n  setReady_(ready) {\n    if (!this.ready_) {\n      this.ready_ = ready;\n      this.createClusters_();\n    }\n  }\n\n\n  /**\n   * Returns the number of clusters in the clusterer.\n   *\n   * @return {number} The number of clusters.\n   */\n  getTotalClusters() {\n    return this.clusters_.length;\n  }\n\n\n  /**\n   * Returns the google map that the clusterer is associated with.\n   *\n   * @return {google.maps.Map} The map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n\n  /**\n   * Sets the google map that the clusterer is associated with.\n   *\n   * @param {google.maps.Map} map The map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n\n\n  /**\n   * Returns the size of the grid.\n   *\n   * @return {number} The grid size.\n   */\n  getGridSize() {\n    return this.gridSize_;\n  }\n\n\n  /**\n   * Sets the size of the grid.\n   *\n   * @param {number} size The grid size.\n   */\n  setGridSize(size) {\n    this.gridSize_ = size;\n  }\n\n\n  /**\n   * Returns the min cluster size.\n   *\n   * @return {number} The grid size.\n   */\n  getMinClusterSize() {\n    return this.minClusterSize_;\n  }\n\n  /**\n   * Sets the min cluster size.\n   *\n   * @param {number} size The grid size.\n   */\n  setMinClusterSize(size) {\n    this.minClusterSize_ = size;\n  }\n\n\n  /**\n   * Extends a bounds object by the grid size.\n   *\n   * @param {google.maps.LatLngBounds} bounds The bounds to extend.\n   * @return {google.maps.LatLngBounds} The extended bounds.\n   */\n  getExtendedBounds(bounds) {\n    var projection = this.getProjection();\n\n    // Turn the bounds into latlng.\n    var tr = new google.maps.LatLng(bounds.getNorthEast().lat(),\n      bounds.getNorthEast().lng());\n    var bl = new google.maps.LatLng(bounds.getSouthWest().lat(),\n      bounds.getSouthWest().lng());\n\n    // Convert the points to pixels and the extend out by the grid size.\n    var trPix = projection.fromLatLngToDivPixel(tr);\n    trPix.x += this.gridSize_;\n    trPix.y -= this.gridSize_;\n\n    var blPix = projection.fromLatLngToDivPixel(bl);\n    blPix.x -= this.gridSize_;\n    blPix.y += this.gridSize_;\n\n    // Convert the pixel points back to LatLng\n    var ne = projection.fromDivPixelToLatLng(trPix);\n    var sw = projection.fromDivPixelToLatLng(blPix);\n\n    // Extend the bounds to contain the new bounds.\n    bounds.extend(ne);\n    bounds.extend(sw);\n\n    return bounds;\n  }\n\n\n  /**\n   * Determins if a marker is contained in a bounds.\n   *\n   * @param {google.maps.Marker} marker The marker to check.\n   * @param {google.maps.LatLngBounds} bounds The bounds to check against.\n   * @return {boolean} True if the marker is in the bounds.\n   * @private\n   */\n  isMarkerInBounds_(marker, bounds) {\n    return bounds.contains(marker.getPosition());\n  }\n\n\n  /**\n   * Clears all clusters and markers from the clusterer.\n   */\n  clearMarkers() {\n    this.resetViewport(true);\n\n    // Set the markers a empty array.\n    this.markers_ = [];\n  }\n\n\n  /**\n   * Clears all existing clusters and recreates them.\n   * @param {boolean} opt_hide To also hide the marker.\n   */\n  resetViewport(opt_hide) {\n    // Remove all the clusters\n    for (var i = 0, cluster; cluster = this.clusters_[i]; i++) {\n      cluster.remove();\n    }\n\n    // Reset the markers to not be added and to be invisible.\n    for (var i = 0, marker; marker = this.markers_[i]; i++) {\n      marker.isAdded = false;\n      if (opt_hide) {\n        marker.setMap(null);\n      }\n    }\n\n    this.clusters_ = [];\n  }\n\n  /**\n   *\n   */\n  repaint() {\n    var oldClusters = this.clusters_.slice();\n    this.clusters_.length = 0;\n    this.resetViewport();\n    this.redraw();\n\n    // Remove the old clusters.\n    // Do it in a timeout so the other clusters have been drawn first.\n    setTimeout(function () {\n      for (var i = 0, cluster; cluster = oldClusters[i]; i++) {\n        cluster.remove();\n      }\n    }, 0);\n  }\n\n\n  /**\n   * Redraws the clusters.\n   */\n  redraw() {\n    this.createClusters_();\n  }\n\n\n  /**\n   * Calculates the distance between two latlng locations in km.\n   * @see http://www.movable-type.co.uk/scripts/latlong.html\n   *\n   * @param {google.maps.LatLng} p1 The first lat lng point.\n   * @param {google.maps.LatLng} p2 The second lat lng point.\n   * @return {number} The distance between the two points in km.\n   * @private\n  */\n  distanceBetweenPoints_(p1, p2) {\n    if (!p1 || !p2) {\n      return 0;\n    }\n\n    var R = 6371; // Radius of the Earth in km\n    var dLat = (p2.lat() - p1.lat()) * Math.PI / 180;\n    var dLon = (p2.lng() - p1.lng()) * Math.PI / 180;\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(p1.lat() * Math.PI / 180) * Math.cos(p2.lat() * Math.PI / 180) *\n      Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var d = R * c;\n    return d;\n  }\n\n\n  /**\n   * Add a marker to a cluster, or creates a new cluster.\n   *\n   * @param {google.maps.Marker} marker The marker to add.\n   * @private\n   */\n  addToClosestCluster_(marker) {\n    var distance = 40000; // Some large number\n    var clusterToAddTo = null;\n    var pos = marker.getPosition();\n    for (var i = 0, cluster; cluster = this.clusters_[i]; i++) {\n      var center = cluster.getCenter();\n      if (center) {\n        var d = this.distanceBetweenPoints_(center, marker.getPosition());\n        if (d < distance) {\n          distance = d;\n          clusterToAddTo = cluster;\n        }\n      }\n    }\n\n    if (clusterToAddTo && clusterToAddTo.isMarkerInClusterBounds(marker)) {\n      clusterToAddTo.addMarker(marker);\n    } else {\n      var cluster = new Cluster(this);\n      cluster.addMarker(marker);\n      this.clusters_.push(cluster);\n    }\n  }\n\n\n  /**\n   * Creates the clusters.\n   *\n   * @private\n   */\n  createClusters_() {\n    if (!this.ready_) {\n      return;\n    }\n\n    // Get our current map view bounds.\n    // Create a new bounds object so we don't affect the map.\n    var mapBounds = new google.maps.LatLngBounds(this.map_.getBounds().getSouthWest(),\n      this.map_.getBounds().getNorthEast());\n    var bounds = this.getExtendedBounds(mapBounds);\n\n    for (var i = 0, marker; marker = this.markers_[i]; i++) {\n      if (!marker.isAdded && this.isMarkerInBounds_(marker, bounds)) {\n        this.addToClosestCluster_(marker);\n      }\n    }\n  }\n}\n\n/**\n * A cluster that contains markers.\n *\n * @param {MarkerClusterer} markerClusterer The markerclusterer that this\n *     cluster is associated with.\n * @constructor\n * @ignore\n */\nclass Cluster {\n  constructor(markerClusterer) {\n    this.markerClusterer_ = markerClusterer;\n    this.map_ = markerClusterer.getMap();\n    this.gridSize_ = markerClusterer.getGridSize();\n    this.minClusterSize_ = markerClusterer.getMinClusterSize();\n    this.averageCenter_ = markerClusterer.isAverageCenter();\n    this.center_ = null;\n    this.markers_ = [];\n    this.bounds_ = null;\n    this.clusterIcon_ = new ClusterIcon(this, markerClusterer.getStyles(),\n      markerClusterer.getGridSize());\n  }\n\n  /**\n   * Determins if a marker is already added to the cluster.\n   *\n   * @param {google.maps.Marker} marker The marker to check.\n   * @return {boolean} True if the marker is already added.\n   */\n  isMarkerAlreadyAdded(marker) {\n    if (this.markers_.indexOf) {\n      return this.markers_.indexOf(marker) != -1;\n    } else {\n      for (var i = 0, m; m = this.markers_[i]; i++) {\n        if (m == marker) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n\n  /**\n   * Add a marker the cluster.\n   *\n   * @param {google.maps.Marker} marker The marker to add.\n   * @return {boolean} True if the marker was added.\n   */\n  addMarker(marker) {\n    if (this.isMarkerAlreadyAdded(marker)) {\n      return false;\n    }\n\n    if (!this.center_) {\n      this.center_ = marker.getPosition();\n      this.calculateBounds_();\n    } else {\n      if (this.averageCenter_) {\n        var l = this.markers_.length + 1;\n        var lat = (this.center_.lat() * (l - 1) + marker.getPosition().lat()) / l;\n        var lng = (this.center_.lng() * (l - 1) + marker.getPosition().lng()) / l;\n        this.center_ = new google.maps.LatLng(lat, lng);\n        this.calculateBounds_();\n      }\n    }\n\n    marker.isAdded = true;\n    this.markers_.push(marker);\n\n    var len = this.markers_.length;\n    if (len < this.minClusterSize_ && marker.getMap() != this.map_) {\n      // Min cluster size not reached so show the marker.\n      marker.setMap(this.map_);\n    }\n\n    if (len == this.minClusterSize_) {\n      // Hide the markers that were showing.\n      for (var i = 0; i < len; i++) {\n        this.markers_[i].setMap(null);\n      }\n    }\n\n    if (len >= this.minClusterSize_) {\n      marker.setMap(null);\n    }\n\n    this.updateIcon();\n    return true;\n  }\n\n\n  /**\n   * Returns the marker clusterer that the cluster is associated with.\n   *\n   * @return {MarkerClusterer} The associated marker clusterer.\n   */\n  getMarkerClusterer() {\n    return this.markerClusterer_;\n  }\n\n\n  /**\n   * Returns the bounds of the cluster.\n   *\n   * @return {google.maps.LatLngBounds} the cluster bounds.\n   */\n  getBounds() {\n    var bounds = new google.maps.LatLngBounds(this.center_, this.center_);\n    var markers = this.getMarkers();\n    for (var i = 0, marker; marker = markers[i]; i++) {\n      bounds.extend(marker.getPosition());\n    }\n    return bounds;\n  }\n\n\n  /**\n   * Removes the cluster\n   */\n  remove() {\n    this.clusterIcon_.remove();\n    this.markers_.length = 0;\n    delete this.markers_;\n  }\n\n\n  /**\n   * Returns the number of markers in the cluster.\n   *\n   * @return {number} The number of markers in the cluster.\n   */\n  getSize() {\n    return this.markers_.length;\n  }\n\n\n  /**\n   * Returns a list of the markers in the cluster.\n   *\n   * @return {Array.<google.maps.Marker>} The markers in the cluster.\n   */\n  getMarkers() {\n    return this.markers_;\n  }\n\n\n  /**\n   * Returns the center of the cluster.\n   *\n   * @return {google.maps.LatLng} The cluster center.\n   */\n  getCenter() {\n    return this.center_;\n  }\n\n\n  /**\n   * Calculated the extended bounds of the cluster with the grid.\n   *\n   * @private\n   */\n  calculateBounds_() {\n    var bounds = new google.maps.LatLngBounds(this.center_, this.center_);\n    this.bounds_ = this.markerClusterer_.getExtendedBounds(bounds);\n  }\n\n\n  /**\n   * Determines if a marker lies in the clusters bounds.\n   *\n   * @param {google.maps.Marker} marker The marker to check.\n   * @return {boolean} True if the marker lies in the bounds.\n   */\n  isMarkerInClusterBounds(marker) {\n    return this.bounds_.contains(marker.getPosition());\n  }\n\n\n  /**\n   * Returns the map that the cluster is associated with.\n   *\n   * @return {google.maps.Map} The map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n\n  /**\n   * Updates the cluster icon\n   */\n  updateIcon() {\n    var zoom = this.map_.getZoom();\n    var mz = this.markerClusterer_.getMaxZoom();\n\n    if (mz && zoom > mz) {\n      // The zoom is greater than our max zoom so show all the markers in cluster.\n      for (var i = 0, marker; marker = this.markers_[i]; i++) {\n        marker.setMap(this.map_);\n      }\n      return;\n    }\n\n    if (this.markers_.length < this.minClusterSize_) {\n      // Min cluster size not yet reached.\n      this.clusterIcon_.hide();\n      return;\n    }\n\n    var numStyles = this.markerClusterer_.getStyles().length;\n    var sums = this.markerClusterer_.getCalculator()(this.markers_, numStyles);\n    this.clusterIcon_.setCenter(this.center_);\n    this.clusterIcon_.setSums(sums);\n    this.clusterIcon_.show();\n  }\n}\n\n/**\n * A cluster icon\n *\n * @param {Cluster} cluster The cluster to be associated with.\n * @param {Object} styles An object that has style properties:\n *     'url': (string) The image url.\n *     'height': (number) The image height.\n *     'width': (number) The image width.\n *     'anchor': (Array) The anchor position of the label text.\n *     'textColor': (string) The text color.\n *     'textSize': (number) The text size.\n *     'backgroundPosition: (string) The background postition x, y.\n * @param {number=} opt_padding Optional padding to apply to the cluster icon.\n * @constructor\n * @extends google.maps.OverlayView\n * @ignore\n */\nclass ClusterIcon {\n  constructor(cluster, styles, opt_padding) {\n    cluster.getMarkerClusterer().extend(ClusterIcon, google.maps.OverlayView);\n\n    this.styles_ = styles;\n    this.padding_ = opt_padding || 0;\n    this.cluster_ = cluster;\n    this.center_ = null;\n    this.map_ = cluster.getMap();\n    this.div_ = null;\n    this.sums_ = null;\n    this.visible_ = false;\n\n    this.setMap(this.map_);\n  }\n\n\n  /**\n   * Triggers the clusterclick event and zoom's if the option is set.\n   */\n  triggerClusterClick() {\n    var clusterBounds = this.cluster_.getBounds();\n    var markerClusterer = this.cluster_.getMarkerClusterer();\n\n    // Trigger the clusterclick event.\n    google.maps.event.trigger(markerClusterer.map_, 'clusterclick', this.cluster_);\n\n    if (markerClusterer.isZoomOnClick()) {\n      // Zoom into the cluster.\n      this.map_.fitBounds(clusterBounds);\n      this.map_.setCenter(clusterBounds.getCenter());\n    }\n  };\n\n\n  /**\n   * Adding the cluster icon to the dom.\n   * @ignore\n   */\n  onAdd() {\n    this.div_ = document.createElement('DIV');\n    if (this.visible_) {\n      var pos = this.getPosFromLatLng_(this.center_);\n      this.div_.style.cssText = this.createCss(pos);\n      this.div_.innerHTML = this.sums_.text;\n    }\n\n    var panes = this.getPanes();\n    panes.overlayMouseTarget.appendChild(this.div_);\n\n    var that = this;\n    google.maps.event.addDomListener(this.div_, 'click', function () {\n      that.triggerClusterClick();\n    });\n  };\n\n\n  /**\n   * Returns the position to place the div dending on the latlng.\n   *\n   * @param {google.maps.LatLng} latlng The position in latlng.\n   * @return {google.maps.Point} The position in pixels.\n   * @private\n   */\n  getPosFromLatLng_(latlng) {\n    var pos = this.getProjection().fromLatLngToDivPixel(latlng);\n    pos.x -= parseInt(this.width_ / 2, 10);\n    pos.y -= parseInt(this.height_ / 2, 10);\n    return pos;\n  };\n\n\n  /**\n   * Draw the icon.\n   * @ignore\n   */\n  draw() {\n    if (this.visible_) {\n      var pos = this.getPosFromLatLng_(this.center_);\n      this.div_.style.top = pos.y + 'px';\n      this.div_.style.left = pos.x + 'px';\n      this.div_.style.zIndex = google.maps.Marker.MAX_ZINDEX + 1;\n    }\n  };\n\n\n  /**\n   * Hide the icon.\n   */\n  hide() {\n    if (this.div_) {\n      this.div_.style.display = 'none';\n    }\n    this.visible_ = false;\n  };\n\n\n  /**\n   * Position and show the icon.\n   */\n  show() {\n    if (this.div_) {\n      var pos = this.getPosFromLatLng_(this.center_);\n      this.div_.style.cssText = this.createCss(pos);\n      this.div_.style.display = '';\n    }\n    this.visible_ = true;\n  };\n\n\n  /**\n   * Remove the icon from the map\n   */\n  remove() {\n    this.setMap(null);\n  };\n\n\n  /**\n   * Implementation of the onRemove interface.\n   * @ignore\n   */\n  onRemove() {\n    if (this.div_ && this.div_.parentNode) {\n      this.hide();\n      this.div_.parentNode.removeChild(this.div_);\n      this.div_ = null;\n    }\n  };\n\n\n  /**\n   * Set the sums of the icon.\n   *\n   * @param {Object} sums The sums containing:\n   *   'text': (string) The text to display in the icon.\n   *   'index': (number) The style index of the icon.\n   */\n  setSums(sums) {\n    this.sums_ = sums;\n    this.text_ = sums.text;\n    this.index_ = sums.index;\n    if (this.div_) {\n      this.div_.innerHTML = sums.text;\n    }\n\n    this.useStyle();\n  };\n\n\n  /**\n   * Sets the icon to the the styles.\n   */\n  useStyle() {\n    var index = Math.max(0, this.sums_.index - 1);\n    index = Math.min(this.styles_.length - 1, index);\n    var style = this.styles_[index];\n    this.url_ = style['url'];\n    this.height_ = style['height'];\n    this.width_ = style['width'];\n    this.textColor_ = style['textColor'];\n    this.anchor_ = style['anchor'];\n    this.textSize_ = style['textSize'];\n    this.backgroundPosition_ = style['backgroundPosition'];\n  };\n\n\n  /**\n   * Sets the center of the icon.\n   *\n   * @param {google.maps.LatLng} center The latlng to set as the center.\n   */\n  setCenter(center) {\n    this.center_ = center;\n  };\n\n\n  /**\n   * Create the css text based on the position of the icon.\n   *\n   * @param {google.maps.Point} pos The position.\n   * @return {string} The css style text.\n   */\n  createCss(pos) {\n    var style = [];\n    style.push('background-image:url(' + this.url_ + ');');\n    var backgroundPosition = this.backgroundPosition_ ? this.backgroundPosition_ : '0 0';\n    style.push('background-position:' + backgroundPosition + ';');\n\n    if (typeof this.anchor_ === 'object') {\n      if (typeof this.anchor_[0] === 'number' && this.anchor_[0] > 0 &&\n        this.anchor_[0] < this.height_) {\n        style.push('height:' + (this.height_ - this.anchor_[0]) +\n          'px; padding-top:' + this.anchor_[0] + 'px;');\n      } else {\n        style.push('height:' + this.height_ + 'px; line-height:' + this.height_ +\n          'px;');\n      }\n      if (typeof this.anchor_[1] === 'number' && this.anchor_[1] > 0 &&\n        this.anchor_[1] < this.width_) {\n        style.push('width:' + (this.width_ - this.anchor_[1]) +\n          'px; padding-left:' + this.anchor_[1] + 'px;');\n      } else {\n        style.push('width:' + this.width_ + 'px; text-align:center;');\n      }\n    } else {\n      style.push('height:' + this.height_ + 'px; line-height:' +\n        this.height_ + 'px; width:' + this.width_ + 'px; text-align:center;');\n    }\n\n    var txtColor = this.textColor_ ? this.textColor_ : 'black';\n    var txtSize = this.textSize_ ? this.textSize_ : 11;\n\n    style.push('cursor:pointer; top:' + pos.y + 'px; left:' +\n      pos.x + 'px; color:' + txtColor + '; position:absolute; font-size:' +\n      txtSize + 'px; font-family:Arial,sans-serif; font-weight:bold');\n    return style.join('');\n  }\n}\n\nexport default MarkerClusterer;"]}